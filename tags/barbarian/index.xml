<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Barbarian! on WSL Programming Blog</title>
    <link>/tags/barbarian/</link>
    <description>Recent content in Barbarian! on WSL Programming Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 24 Jul 2018 16:00:00 -0700</lastBuildDate>
    
	<atom:link href="/tags/barbarian/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>The Roguelike Tutorial - Week 5a</title>
      <link>/posts/2018-07-24-the-roguelike-tutorial-week5a/</link>
      <pubDate>Tue, 24 Jul 2018 16:00:00 -0700</pubDate>
      
      <guid>/posts/2018-07-24-the-roguelike-tutorial-week5a/</guid>
      <description>Another very productive week for this project! Although I was unable to finish last weeks goals of getting Parts 8 and 9 completed by today, I still feel pretty darn good about what I did accomplish. Besides, Parts 10, 11, and 12 are all fairly simple - heck the code is already in place, just needs to actually be used!
After finishing Part 7 last week I decided to try and fix/change a few things that have been bothering me.</description>
    </item>
    
    <item>
      <title>The Roguelike Tutorial - Week 4</title>
      <link>/posts/2018-07-18-the-roguelike-tutorial-week4/</link>
      <pubDate>Wed, 18 Jul 2018 12:00:00 -0700</pubDate>
      
      <guid>/posts/2018-07-18-the-roguelike-tutorial-week4/</guid>
      <description>The past week has been equal parts frustration and excitement with this project. I ran into a pretty common design problem: entity components need to know about the rest of the game. Well, since each entity is just a collection of components it shouldn&amp;rsquo;t be difficult to pass a pointer to the game engine. Then, the components would have a pointer to the entity that &amp;ldquo;owns&amp;rdquo; it. Simple and clean&amp;hellip; or so I thought.</description>
    </item>
    
    <item>
      <title>The Roguelike Tutorial - Week 3b</title>
      <link>/posts/2018-07-10-the-roguelike-tutorial-week3b/</link>
      <pubDate>Tue, 10 Jul 2018 22:31:00 -0700</pubDate>
      
      <guid>/posts/2018-07-10-the-roguelike-tutorial-week3b/</guid>
      <description>I originally planned for this week&amp;rsquo;s blog post to cover my adaptation of part 5 of the Python RL tutorial - but after finishing part 5 in a matter of minutes I realized there wouldn&amp;rsquo;t be much to write here! Part 5 is basically making new entities and getting the collision logic in place before combat is added in part 6. However, before adding combat I thought it would be beneficial to start thinking about game time - it&amp;rsquo;s far more fun when some enemies are a lot quicker than the player, forcing the player to devise strategies for survival.</description>
    </item>
    
    <item>
      <title>The Roguelike Tutorial - Week 3a</title>
      <link>/posts/2018-07-02-the-roguelike-tutorial-week3/</link>
      <pubDate>Mon, 02 Jul 2018 08:00:00 -0700</pubDate>
      
      <guid>/posts/2018-07-02-the-roguelike-tutorial-week3/</guid>
      <description>I decided to split the third week into two separate posts so that I wouldn&amp;rsquo;t ramble on as long as last week. Over the past week I continued fighting the BSP dungeon generator I had attempted to write the week prior, and gave up again. I&amp;rsquo;ll probably revisit the dungeon generator later, and will definitely write something about whatever I end up doing. The artificial deadlines imposed by following along with the rest of r/roguelikedev really helps motivate me to call something &amp;ldquo;good enough&amp;rdquo; and move on&amp;hellip; Heck, I think I could be satisfied just tinkering with dungeon generators and never moving on to actually making this a playable game!</description>
    </item>
    
    <item>
      <title>The Roguelike Tutorial - Week 2</title>
      <link>/posts/2018-06-25-the-roguelike-tutorial-week2/</link>
      <pubDate>Mon, 25 Jun 2018 08:00:00 -0700</pubDate>
      
      <guid>/posts/2018-06-25-the-roguelike-tutorial-week2/</guid>
      <description>So this week&amp;rsquo;s goal is to finish part 2 and part 3 of the tutorial - I worked ahead because I was excited to get this project going, which worked out well since shortly after finishing part 2 I switched to SDL from SFML and it gave me some time to work on this blog.
The Switch to SDL So the game logic is completely divorced from the rendering system - I don&amp;rsquo;t want to be tied into using a set framework if I want to change later, and I know for a fact from previous projects this will make save files much easier to generate.</description>
    </item>
    
    <item>
      <title>The Roguelike Tutorial - Week 1</title>
      <link>/posts/2018-06-20-the-roguelike-tutorial-week1/</link>
      <pubDate>Wed, 20 Jun 2018 07:00:00 -0700</pubDate>
      
      <guid>/posts/2018-06-20-the-roguelike-tutorial-week1/</guid>
      <description>Last year r/roguelikedev did a really cool thing with a weekly post where everyone followed along with a tutorial, shared ideas and problems, and motivated each other to actually finish a project. Well they&amp;rsquo;re doing it again this year, and with the announcement last week I decided to take a look at the new and improved, Python3 version of the tutorial.
For those not familiar with this famous tutorial - each part covers a small chunk of building a roguelike using simple language and easy to follow code.</description>
    </item>
    
  </channel>
</rss>