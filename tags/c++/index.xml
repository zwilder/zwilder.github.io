<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>C&#43;&#43; on Wsl Blog</title>
    <link>/tags/c&#43;&#43;/</link>
    <description>Recent content in C&#43;&#43; on Wsl Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 18 Sep 2018 14:00:00 -0700</lastBuildDate>
    
	<atom:link href="/tags/c++/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Explosions in the Dungeon</title>
      <link>/posts/2018-09-18-explosions/</link>
      <pubDate>Tue, 18 Sep 2018 14:00:00 -0700</pubDate>
      
      <guid>/posts/2018-09-18-explosions/</guid>
      <description>One of the big goals for Barbarian and one of the coolest things on my to do list was to add animations into the game. How exciting is it to see an arrow flying toward your character, a firebolt explode in the face of an undead horde, blood splatter flying from the wounds inflicted by the mighty barbarian decorating the walls of the dungeon?
Obviously, the excitement added by all these visual effects is well worth the time spent adding them in.</description>
    </item>
    
    <item>
      <title>Wonderful Lists</title>
      <link>/posts/2018-08-26-lists/</link>
      <pubDate>Sun, 26 Aug 2018 15:00:00 -0700</pubDate>
      
      <guid>/posts/2018-08-26-lists/</guid>
      <description>Over the course of the 2018 r/roguelikedev Tutorial Tuesday Challenge I decided to invest some time learning some fundamental programming concepts that I probably should have learned years ago. The fun (and challenging) part of being a hobby programmer is that most of my learning comes from books, and then random tutorials on the internet. Somewhere in the course of my &amp;ldquo;education&amp;rdquo; I never learned about basic data structures and how they can be used.</description>
    </item>
    
    <item>
      <title>The Roguelike Tutorial - Week 7</title>
      <link>/posts/2018-08-09-the-rogueliketutorial-week7/</link>
      <pubDate>Thu, 09 Aug 2018 13:00:00 -0700</pubDate>
      
      <guid>/posts/2018-08-09-the-rogueliketutorial-week7/</guid>
      <description>I didn&amp;rsquo;t do a lot of coding over the last week, but I did finish the challenge! Had a bit of a scare after finishing part 12, I found a horrible lurking bug in the program that caused a LOT of little errors and I wasn&amp;rsquo;t sure (at first) how to track it down. Basically, shortly after finishing adding in some cool randomization functions I found that some entities weren&amp;rsquo;t being copied correctly, or saved correctly.</description>
    </item>
    
    <item>
      <title>The Roguelike Tutorial - Week 5b/6</title>
      <link>/posts/2018-07-31-the-roguelike-tutorial-week5b6/</link>
      <pubDate>Tue, 31 Jul 2018 13:00:00 -0700</pubDate>
      
      <guid>/posts/2018-07-31-the-roguelike-tutorial-week5b6/</guid>
      <description>Oh man, this has been a super exciting and productive week - this project is starting to feel like a real game! Started off last week a bit behind schedule, having just finished part 8. After my rant last week about my source code files getting too long, I decided to spend a bit of time going back over my core classes and cleaning up the code. I also split Engine into multiple files - which ended up making a lot of things a lot easier.</description>
    </item>
    
    <item>
      <title>The Roguelike Tutorial - Week 5a</title>
      <link>/posts/2018-07-24-the-roguelike-tutorial-week5a/</link>
      <pubDate>Tue, 24 Jul 2018 16:00:00 -0700</pubDate>
      
      <guid>/posts/2018-07-24-the-roguelike-tutorial-week5a/</guid>
      <description>Another very productive week for this project! Although I was unable to finish last weeks goals of getting Parts 8 and 9 completed by today, I still feel pretty darn good about what I did accomplish. Besides, Parts 10, 11, and 12 are all fairly simple - heck the code is already in place, just needs to actually be used!
After finishing Part 7 last week I decided to try and fix/change a few things that have been bothering me.</description>
    </item>
    
    <item>
      <title>The Roguelike Tutorial - Week 4</title>
      <link>/posts/2018-07-18-the-roguelike-tutorial-week4/</link>
      <pubDate>Wed, 18 Jul 2018 12:00:00 -0700</pubDate>
      
      <guid>/posts/2018-07-18-the-roguelike-tutorial-week4/</guid>
      <description>The past week has been equal parts frustration and excitement with this project. I ran into a pretty common design problem: entity components need to know about the rest of the game. Well, since each entity is just a collection of components it shouldn&amp;rsquo;t be difficult to pass a pointer to the game engine. Then, the components would have a pointer to the entity that &amp;ldquo;owns&amp;rdquo; it. Simple and clean&amp;hellip; or so I thought.</description>
    </item>
    
    <item>
      <title>The Roguelike Tutorial - Week 3b</title>
      <link>/posts/2018-07-10-the-roguelike-tutorial-week3b/</link>
      <pubDate>Tue, 10 Jul 2018 22:31:00 -0700</pubDate>
      
      <guid>/posts/2018-07-10-the-roguelike-tutorial-week3b/</guid>
      <description>I originally planned for this week&amp;rsquo;s blog post to cover my adaptation of part 5 of the Python RL tutorial - but after finishing part 5 in a matter of minutes I realized there wouldn&amp;rsquo;t be much to write here! Part 5 is basically making new entities and getting the collision logic in place before combat is added in part 6. However, before adding combat I thought it would be beneficial to start thinking about game time - it&amp;rsquo;s far more fun when some enemies are a lot quicker than the player, forcing the player to devise strategies for survival.</description>
    </item>
    
    <item>
      <title>The Roguelike Tutorial - Week 3a</title>
      <link>/posts/2018-07-02-the-roguelike-tutorial-week3/</link>
      <pubDate>Mon, 02 Jul 2018 08:00:00 -0700</pubDate>
      
      <guid>/posts/2018-07-02-the-roguelike-tutorial-week3/</guid>
      <description>I decided to split the third week into two separate posts so that I wouldn&amp;rsquo;t ramble on as long as last week. Over the past week I continued fighting the BSP dungeon generator I had attempted to write the week prior, and gave up again. I&amp;rsquo;ll probably revisit the dungeon generator later, and will definitely write something about whatever I end up doing. The artificial deadlines imposed by following along with the rest of r/roguelikedev really helps motivate me to call something &amp;ldquo;good enough&amp;rdquo; and move on&amp;hellip; Heck, I think I could be satisfied just tinkering with dungeon generators and never moving on to actually making this a playable game!</description>
    </item>
    
    <item>
      <title>The Roguelike Tutorial - Week 2</title>
      <link>/posts/2018-06-25-the-roguelike-tutorial-week2/</link>
      <pubDate>Mon, 25 Jun 2018 08:00:00 -0700</pubDate>
      
      <guid>/posts/2018-06-25-the-roguelike-tutorial-week2/</guid>
      <description>So this week&amp;rsquo;s goal is to finish part 2 and part 3 of the tutorial - I worked ahead because I was excited to get this project going, which worked out well since shortly after finishing part 2 I switched to SDL from SFML and it gave me some time to work on this blog.
The Switch to SDL So the game logic is completely divorced from the rendering system - I don&amp;rsquo;t want to be tied into using a set framework if I want to change later, and I know for a fact from previous projects this will make save files much easier to generate.</description>
    </item>
    
    <item>
      <title>The Roguelike Tutorial - Week 1</title>
      <link>/posts/2018-06-20-the-roguelike-tutorial-week1/</link>
      <pubDate>Wed, 20 Jun 2018 07:00:00 -0700</pubDate>
      
      <guid>/posts/2018-06-20-the-roguelike-tutorial-week1/</guid>
      <description>Last year r/roguelikedev did a really cool thing with a weekly post where everyone followed along with a tutorial, shared ideas and problems, and motivated each other to actually finish a project. Well they&amp;rsquo;re doing it again this year, and with the announcement last week I decided to take a look at the new and improved, Python3 version of the tutorial.
For those not familiar with this famous tutorial - each part covers a small chunk of building a roguelike using simple language and easy to follow code.</description>
    </item>
    
    <item>
      <title>Yet Another Blog Attempt</title>
      <link>/posts/2017-10-15-yet-another-blog-attempt/</link>
      <pubDate>Mon, 16 Oct 2017 20:55:23 -0700</pubDate>
      
      <guid>/posts/2017-10-15-yet-another-blog-attempt/</guid>
      <description>Man, I really don&amp;rsquo;t do a lot of work on this blog - maybe because I am not a web programmer but I can see when this blog does not look very good.
Well, I officially gave up on web design. Yep! Turns out, I should probably leave that to the professionals. Oh, and I also decided to heck with Jekyll. It was cool, and worked well - but searching for a premade Jekyll theme was a chore.</description>
    </item>
    
    <item>
      <title>Gradients for Colors, and Actions for Actors</title>
      <link>/posts/2017-01-07-gradients-and-actions/</link>
      <pubDate>Sat, 07 Jan 2017 11:45:00 -0700</pubDate>
      
      <guid>/posts/2017-01-07-gradients-and-actions/</guid>
      <description>Over the past couple of weeks I&amp;rsquo;ve been working on simplifying the code for my roguelike project - heavily inspired by one of my favorite books on my shelf, Game Programming Patterns.
I&amp;rsquo;ve seriously read this book cover to cover, multiple times - and every time find a new use for one of the &amp;lsquo;patterns&amp;rsquo; in it. I just discovered that the author&amp;rsquo;s blog has a bunch of good reads on it as well.</description>
    </item>
    
    <item>
      <title>Randomly Generated Caves with Cellular Automata</title>
      <link>/posts/2016-12-20-automata-caves/</link>
      <pubDate>Thu, 22 Dec 2016 19:18:06 -0700</pubDate>
      
      <guid>/posts/2016-12-20-automata-caves/</guid>
      <description>So, every time I get the urge to write a blog post about whatever random bit of code I&amp;rsquo;m writing - I look at the blog and think: &amp;ldquo;Hm, this is kinda ugly.&amp;rdquo; Then, I have to rewrite it until I&amp;rsquo;m mostly satisfied with how it looks.
Recently, I&amp;rsquo;ve been working on writing a nice little interface for handling menus and other parts of the UI for my roguelike project. Unfortunately, like the layout of this blog, I can&amp;rsquo;t seem to find a satisfactory &amp;lsquo;look and feel&amp;rsquo; - I think I&amp;rsquo;ve got a good start though.</description>
    </item>
    
    <item>
      <title>Fun With Dijkstra Mapping</title>
      <link>/posts/2016-07-15-fun-with-dijkstra-mapping/</link>
      <pubDate>Fri, 15 Jul 2016 08:29:06 -0700</pubDate>
      
      <guid>/posts/2016-07-15-fun-with-dijkstra-mapping/</guid>
      <description>Continuing in my never-ending project to make a &amp;ldquo;simple&amp;rdquo; roguelike in C++, I decided to tackle something I have never before tried: artificial intelligence. My first rough idea was to implement some sort of component-type system, and build the AI up like I built up entities. This turned out to be far too complicated, and even getting a monster to move randomly was a chore. Obviously, this wasn&amp;rsquo;t going to work.</description>
    </item>
    
  </channel>
</rss>