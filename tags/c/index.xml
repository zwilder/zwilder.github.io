<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>C on Wsl Blog</title>
    <link>/tags/c/</link>
    <description>Recent content in C on Wsl Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 16 Feb 2024 11:00:00 -0700</lastBuildDate>
    
	<atom:link href="/tags/c/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Solitaire Fun</title>
      <link>/posts/2024-2-17-cards/</link>
      <pubDate>Fri, 16 Feb 2024 11:00:00 -0700</pubDate>
      
      <guid>/posts/2024-2-17-cards/</guid>
      <description>Way back in 2022 I started reading about using terminal escape codes to do away with depending on NCurses for all the terminal drawing and keyboard handling for terminal applications. If I recall correctly, my original motivation was because I wanted to use fancy unicode characters with the Goblin Caves project, and NCurses was not playing nicely.
Of course, I couldn&amp;rsquo;t just dive right into swapping over the entirety of Goblin Caves to using terminal codes directly without testing them on something - and the first thing I thought of was why not make a simulation of a deck of cards? I messed around, designed a way overbuilt deck of cards, and even started working on implementing a Cribbage game (ambitious!). I ran into a weird problem with Cribbage, couldn&amp;rsquo;t figure it out, and shelved the project. Some screenshots of the original project:
        Well, when I recently started working on Goblin Caves again I remembered my efforts to write some simple drawing and event handling code, brought that code over to the Goblin Caves project, buffed it up, and it worked great.</description>
    </item>
    
    <item>
      <title>Procedural Mushrooms and Random Names</title>
      <link>/posts/2023-11-27-random-names/</link>
      <pubDate>Mon, 27 Nov 2023 11:00:00 -0700</pubDate>
      
      <guid>/posts/2023-11-27-random-names/</guid>
      <description>&lt;p&gt;The holidays are always a great time to slack off and work on fun projects -
while eating too much pie and wearing sweatpants for multiple days, of course.
Over the past week or so I&amp;rsquo;ve made a few neat things and more importantly
tied the Markov chain word generator into the Goblin Caves project.&lt;/p&gt;
&lt;p&gt;The first little thing I made is a procedural mushroom generator.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Markov Chain Word Generator</title>
      <link>/posts/2023-11-17-markov/</link>
      <pubDate>Fri, 17 Nov 2023 11:00:00 -0700</pubDate>
      
      <guid>/posts/2023-11-17-markov/</guid>
      <description>The first screen the player sees in Goblin Caves is a black screen with a question and a prompt.
    This &amp;ldquo;new player&amp;rdquo; screen was originally made as a &amp;ldquo;quick and dirty&amp;rdquo; sort of thing, with the intention of replacing it with something fancier - or at least more flashy. It&amp;rsquo;s really grown on me since I originally wrote it, and I don&amp;rsquo;t think I&amp;rsquo;m going to change it. What does still bother me though, is that if you just hit enter without putting down something a little message box pops up, asking you to &amp;ldquo;Please try again.&amp;rdquo;
    That&amp;rsquo;s kinda lame, and directly above the code that does that error checking (was) a comment I wrote to myself: &amp;ldquo;It would be super cool if this was replaced with a call to a random name generator&amp;hellip;&amp;rdquo;
Well I came across that comment while rewriting all the drawing and input handling code, and decided that was going to be my next project.</description>
    </item>
    
    <item>
      <title>Goblin Caves</title>
      <link>/posts/2023-11-04-goblins/</link>
      <pubDate>Sat, 04 Nov 2023 11:00:00 -0700</pubDate>
      
      <guid>/posts/2023-11-04-goblins/</guid>
      <description>&lt;p&gt;As a kid, I wanted to learn how to program to make computer games. That was the
original goal, anyways. I&amp;rsquo;ve always felt there is a weird sort of magic being
able to type structured sentences into a text file, ram it through a compiler
(sometimes with fun, cryptic looking incantations typed into the terminal), and
seeing something come to life on the other end.&lt;/p&gt;
&lt;p&gt;Programming has always been an on again/off again sort of hobby. I think it&amp;rsquo;s
more the act of making something from nothing that draws me to it then actually
making something. A few years ago (actually closer to a decade, somehow) I found
the &lt;a href=&#34;https://www.roguebasin.com/index.php/Complete_Roguelike_Tutorial,_using_python%2Blibtcod&#34;&gt;Complete Roguelike
Tutorial&lt;/a&gt;
using Python and libtcod. I didn&amp;rsquo;t know Python when I started the tutorial, but
the end result of that project was amazing - I had a mostly complete game. I
tweaked and customized, modified and played around with that project for a
while. Eventually hit a wall, probably due to my lack of knowledge with Python.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>