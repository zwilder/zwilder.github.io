<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Makefile on Wsl Blog</title>
    <link>/tags/makefile/</link>
    <description>Recent content in Makefile on Wsl Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 24 Jul 2018 16:00:00 -0700</lastBuildDate>
    
	<atom:link href="/tags/makefile/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>The Roguelike Tutorial - Week 5a</title>
      <link>/posts/2018-07-24-the-roguelike-tutorial-week5a/</link>
      <pubDate>Tue, 24 Jul 2018 16:00:00 -0700</pubDate>
      
      <guid>/posts/2018-07-24-the-roguelike-tutorial-week5a/</guid>
      <description>Another very productive week for this project! Although I was unable to finish last weeks goals of getting Parts 8 and 9 completed by today, I still feel pretty darn good about what I did accomplish. Besides, Parts 10, 11, and 12 are all fairly simple - heck the code is already in place, just needs to actually be used!
After finishing Part 7 last week I decided to try and fix/change a few things that have been bothering me. The square, 12x12 font, looked great for the map tiles but it was really ugly for text. I figured my alternatives were to either use two fonts (like a 6x12 for text and a 12x12 for map), or just use a different font altogether. All my years playing games in a terminal window pushed me to the second option - if it’s good enough for the best roguelikes, it’s good enough for me! The only difficulty with this option is that if I ever want to add graphical tiles easily, I’d have to make the tiles in a strange size (ie 9x14 instead of 16x16). Adding graphical tiles in will be a chore anyways, so I’ll just go ahead and not worry about it now. This is what the game looks like now:
  Pretty slick! After changing to a nice 9x14 font, I decided to tackle another minor improvement that makes a huge impact: fullscreen mode! First, I had to set the game window to a standard resolution (800x600), and then center the console in that window. Easy enough. Conveniently SDL has a super cool built in function to turn on fullscreen! Oddly, it doesn’t work at all. Maybe a fault with my code, maybe a fault with SDL. Not sure, but google showed me that a bunch of people have the same issue - and very few people had work-arounds. The solution I chose to go with is to make the window a bit larger than the computer desktop resolution, and then center it. So, it’s very much a fake fullscreen, but it works and looks darn nice.</description>
    </item>
    
  </channel>
</rss>